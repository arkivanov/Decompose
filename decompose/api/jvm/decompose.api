public abstract class com/arkivanov/decompose/Child {
	public abstract fun getConfiguration ()Ljava/lang/Object;
}

public final class com/arkivanov/decompose/Child$Created : com/arkivanov/decompose/Child {
	public fun <init> (Ljava/lang/Object;Ljava/lang/Object;)V
	public final fun component1 ()Ljava/lang/Object;
	public final fun component2 ()Ljava/lang/Object;
	public final fun copy (Ljava/lang/Object;Ljava/lang/Object;)Lcom/arkivanov/decompose/Child$Created;
	public static synthetic fun copy$default (Lcom/arkivanov/decompose/Child$Created;Ljava/lang/Object;Ljava/lang/Object;ILjava/lang/Object;)Lcom/arkivanov/decompose/Child$Created;
	public fun equals (Ljava/lang/Object;)Z
	public fun getConfiguration ()Ljava/lang/Object;
	public final fun getInstance ()Ljava/lang/Object;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/arkivanov/decompose/Child$Destroyed : com/arkivanov/decompose/Child {
	public fun <init> (Ljava/lang/Object;)V
	public final fun component1 ()Ljava/lang/Object;
	public final fun copy (Ljava/lang/Object;)Lcom/arkivanov/decompose/Child$Destroyed;
	public static synthetic fun copy$default (Lcom/arkivanov/decompose/Child$Destroyed;Ljava/lang/Object;ILjava/lang/Object;)Lcom/arkivanov/decompose/Child$Destroyed;
	public fun equals (Ljava/lang/Object;)Z
	public fun getConfiguration ()Ljava/lang/Object;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract interface class com/arkivanov/decompose/ComponentContext : com/arkivanov/essenty/backhandler/BackHandlerOwner, com/arkivanov/essenty/instancekeeper/InstanceKeeperOwner, com/arkivanov/essenty/lifecycle/LifecycleOwner, com/arkivanov/essenty/statekeeper/StateKeeperOwner {
}

public final class com/arkivanov/decompose/ComponentContextExtKt {
	public static final fun childContext (Lcom/arkivanov/decompose/ComponentContext;Ljava/lang/String;Lcom/arkivanov/essenty/lifecycle/Lifecycle;)Lcom/arkivanov/decompose/ComponentContext;
	public static synthetic fun childContext$default (Lcom/arkivanov/decompose/ComponentContext;Ljava/lang/String;Lcom/arkivanov/essenty/lifecycle/Lifecycle;ILjava/lang/Object;)Lcom/arkivanov/decompose/ComponentContext;
}

public final class com/arkivanov/decompose/DefaultComponentContext : com/arkivanov/decompose/ComponentContext {
	public fun <init> (Lcom/arkivanov/essenty/lifecycle/Lifecycle;)V
	public fun <init> (Lcom/arkivanov/essenty/lifecycle/Lifecycle;Lcom/arkivanov/essenty/statekeeper/StateKeeper;Lcom/arkivanov/essenty/instancekeeper/InstanceKeeper;Lcom/arkivanov/essenty/backhandler/BackHandler;)V
	public synthetic fun <init> (Lcom/arkivanov/essenty/lifecycle/Lifecycle;Lcom/arkivanov/essenty/statekeeper/StateKeeper;Lcom/arkivanov/essenty/instancekeeper/InstanceKeeper;Lcom/arkivanov/essenty/backhandler/BackHandler;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun getBackHandler ()Lcom/arkivanov/essenty/backhandler/BackHandler;
	public fun getInstanceKeeper ()Lcom/arkivanov/essenty/instancekeeper/InstanceKeeper;
	public fun getLifecycle ()Lcom/arkivanov/essenty/lifecycle/Lifecycle;
	public fun getStateKeeper ()Lcom/arkivanov/essenty/statekeeper/StateKeeper;
}

public abstract interface annotation class com/arkivanov/decompose/ExperimentalDecomposeApi : java/lang/annotation/Annotation {
}

public abstract interface annotation class com/arkivanov/decompose/InternalDecomposeApi : java/lang/annotation/Annotation {
}

public final class com/arkivanov/decompose/lifecycle/MergedLifecycle : com/arkivanov/essenty/lifecycle/Lifecycle {
	public fun <init> (Lcom/arkivanov/essenty/lifecycle/Lifecycle;Lcom/arkivanov/essenty/lifecycle/Lifecycle;)V
	public fun getState ()Lcom/arkivanov/essenty/lifecycle/Lifecycle$State;
	public fun subscribe (Lcom/arkivanov/essenty/lifecycle/Lifecycle$Callbacks;)V
	public fun unsubscribe (Lcom/arkivanov/essenty/lifecycle/Lifecycle$Callbacks;)V
}

public final class com/arkivanov/decompose/router/overlay/ChildOverlay {
	public fun <init> ()V
	public fun <init> (Lcom/arkivanov/decompose/Child$Created;)V
	public synthetic fun <init> (Lcom/arkivanov/decompose/Child$Created;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Lcom/arkivanov/decompose/Child$Created;
	public final fun copy (Lcom/arkivanov/decompose/Child$Created;)Lcom/arkivanov/decompose/router/overlay/ChildOverlay;
	public static synthetic fun copy$default (Lcom/arkivanov/decompose/router/overlay/ChildOverlay;Lcom/arkivanov/decompose/Child$Created;ILjava/lang/Object;)Lcom/arkivanov/decompose/router/overlay/ChildOverlay;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getOverlay ()Lcom/arkivanov/decompose/Child$Created;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/arkivanov/decompose/router/overlay/ChildOverlayFactoryKt {
	public static final fun childOverlay (Lcom/arkivanov/decompose/ComponentContext;Lcom/arkivanov/decompose/router/overlay/OverlayNavigationSource;Lkotlin/reflect/KClass;Ljava/lang/String;Lkotlin/jvm/functions/Function0;ZZLkotlin/jvm/functions/Function2;)Lcom/arkivanov/decompose/value/Value;
	public static synthetic fun childOverlay$default (Lcom/arkivanov/decompose/ComponentContext;Lcom/arkivanov/decompose/router/overlay/OverlayNavigationSource;Lkotlin/reflect/KClass;Ljava/lang/String;Lkotlin/jvm/functions/Function0;ZZLkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lcom/arkivanov/decompose/value/Value;
}

public abstract interface class com/arkivanov/decompose/router/overlay/OverlayNavigation : com/arkivanov/decompose/router/overlay/OverlayNavigationSource, com/arkivanov/decompose/router/overlay/OverlayNavigator {
}

public final class com/arkivanov/decompose/router/overlay/OverlayNavigationFactoryKt {
	public static final fun OverlayNavigation ()Lcom/arkivanov/decompose/router/overlay/OverlayNavigation;
}

public abstract interface class com/arkivanov/decompose/router/overlay/OverlayNavigationSource {
	public abstract fun subscribe (Lkotlin/jvm/functions/Function1;)V
	public abstract fun unsubscribe (Lkotlin/jvm/functions/Function1;)V
}

public final class com/arkivanov/decompose/router/overlay/OverlayNavigationSource$Event {
	public fun <init> (Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function2;)V
	public synthetic fun <init> (Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function2;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getOnComplete ()Lkotlin/jvm/functions/Function2;
	public final fun getTransformer ()Lkotlin/jvm/functions/Function1;
}

public abstract interface class com/arkivanov/decompose/router/overlay/OverlayNavigator {
	public abstract fun navigate (Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function2;)V
}

public final class com/arkivanov/decompose/router/overlay/OverlayNavigatorExtKt {
	public static final fun activate (Lcom/arkivanov/decompose/router/overlay/OverlayNavigator;Ljava/lang/Object;Lkotlin/jvm/functions/Function0;)V
	public static synthetic fun activate$default (Lcom/arkivanov/decompose/router/overlay/OverlayNavigator;Ljava/lang/Object;Lkotlin/jvm/functions/Function0;ILjava/lang/Object;)V
	public static final fun dismiss (Lcom/arkivanov/decompose/router/overlay/OverlayNavigator;Lkotlin/jvm/functions/Function1;)V
	public static synthetic fun dismiss$default (Lcom/arkivanov/decompose/router/overlay/OverlayNavigator;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)V
	public static final fun navigate (Lcom/arkivanov/decompose/router/overlay/OverlayNavigator;Lkotlin/jvm/functions/Function1;)V
}

public final class com/arkivanov/decompose/router/overlay/ValueExtKt {
	public static final fun getOverlay (Lcom/arkivanov/decompose/value/Value;)Lcom/arkivanov/decompose/Child$Created;
}

public final class com/arkivanov/decompose/router/stack/ChildStack {
	public fun <init> (Lcom/arkivanov/decompose/Child$Created;Ljava/util/List;)V
	public synthetic fun <init> (Lcom/arkivanov/decompose/Child$Created;Ljava/util/List;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun <init> (Ljava/lang/Object;Ljava/lang/Object;)V
	public final fun component1 ()Lcom/arkivanov/decompose/Child$Created;
	public final fun component2 ()Ljava/util/List;
	public final fun copy (Lcom/arkivanov/decompose/Child$Created;Ljava/util/List;)Lcom/arkivanov/decompose/router/stack/ChildStack;
	public static synthetic fun copy$default (Lcom/arkivanov/decompose/router/stack/ChildStack;Lcom/arkivanov/decompose/Child$Created;Ljava/util/List;ILjava/lang/Object;)Lcom/arkivanov/decompose/router/stack/ChildStack;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getActive ()Lcom/arkivanov/decompose/Child$Created;
	public final fun getBackStack ()Ljava/util/List;
	public final fun getItems ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/arkivanov/decompose/router/stack/ChildStackFactoryKt {
	public static final fun childStack (Lcom/arkivanov/decompose/ComponentContext;Lcom/arkivanov/decompose/router/stack/StackNavigationSource;Lkotlin/jvm/functions/Function0;Lkotlin/reflect/KClass;Ljava/lang/String;ZLkotlin/jvm/functions/Function2;)Lcom/arkivanov/decompose/value/Value;
	public static synthetic fun childStack$default (Lcom/arkivanov/decompose/ComponentContext;Lcom/arkivanov/decompose/router/stack/StackNavigationSource;Lkotlin/jvm/functions/Function0;Lkotlin/reflect/KClass;Ljava/lang/String;ZLkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lcom/arkivanov/decompose/value/Value;
}

public abstract interface class com/arkivanov/decompose/router/stack/StackNavigation : com/arkivanov/decompose/router/stack/StackNavigationSource, com/arkivanov/decompose/router/stack/StackNavigator {
}

public final class com/arkivanov/decompose/router/stack/StackNavigationFactoryKt {
	public static final fun StackNavigation ()Lcom/arkivanov/decompose/router/stack/StackNavigation;
}

public abstract interface class com/arkivanov/decompose/router/stack/StackNavigationSource {
	public abstract fun subscribe (Lkotlin/jvm/functions/Function1;)V
	public abstract fun unsubscribe (Lkotlin/jvm/functions/Function1;)V
}

public final class com/arkivanov/decompose/router/stack/StackNavigationSource$Event {
	public fun <init> (Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function2;)V
	public synthetic fun <init> (Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function2;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getOnComplete ()Lkotlin/jvm/functions/Function2;
	public final fun getTransformer ()Lkotlin/jvm/functions/Function1;
}

public abstract interface class com/arkivanov/decompose/router/stack/StackNavigator {
	public abstract fun navigate (Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function2;)V
}

public final class com/arkivanov/decompose/router/stack/StackNavigatorExtKt {
	public static final fun bringToFront (Lcom/arkivanov/decompose/router/stack/StackNavigator;Ljava/lang/Object;Lkotlin/jvm/functions/Function0;)V
	public static synthetic fun bringToFront$default (Lcom/arkivanov/decompose/router/stack/StackNavigator;Ljava/lang/Object;Lkotlin/jvm/functions/Function0;ILjava/lang/Object;)V
	public static final fun navigate (Lcom/arkivanov/decompose/router/stack/StackNavigator;Lkotlin/jvm/functions/Function1;)V
	public static final fun pop (Lcom/arkivanov/decompose/router/stack/StackNavigator;Lkotlin/jvm/functions/Function1;)V
	public static synthetic fun pop$default (Lcom/arkivanov/decompose/router/stack/StackNavigator;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)V
	public static final fun popWhile (Lcom/arkivanov/decompose/router/stack/StackNavigator;Lkotlin/jvm/functions/Function1;)V
	public static final fun popWhile (Lcom/arkivanov/decompose/router/stack/StackNavigator;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)V
	public static final fun push (Lcom/arkivanov/decompose/router/stack/StackNavigator;Ljava/lang/Object;Lkotlin/jvm/functions/Function0;)V
	public static synthetic fun push$default (Lcom/arkivanov/decompose/router/stack/StackNavigator;Ljava/lang/Object;Lkotlin/jvm/functions/Function0;ILjava/lang/Object;)V
	public static final fun replaceCurrent (Lcom/arkivanov/decompose/router/stack/StackNavigator;Ljava/lang/Object;Lkotlin/jvm/functions/Function0;)V
	public static synthetic fun replaceCurrent$default (Lcom/arkivanov/decompose/router/stack/StackNavigator;Ljava/lang/Object;Lkotlin/jvm/functions/Function0;ILjava/lang/Object;)V
}

public final class com/arkivanov/decompose/router/stack/ValueExtKt {
	public static final fun getActive (Lcom/arkivanov/decompose/value/Value;)Lcom/arkivanov/decompose/Child$Created;
	public static final fun getBackStack (Lcom/arkivanov/decompose/value/Value;)Ljava/util/List;
	public static final fun getItems (Lcom/arkivanov/decompose/value/Value;)Ljava/util/List;
}

public abstract interface class com/arkivanov/decompose/router/stack/webhistory/WebHistoryController {
	public abstract fun attach (Lcom/arkivanov/decompose/router/stack/StackNavigator;Lcom/arkivanov/decompose/value/Value;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)V
}

public abstract class com/arkivanov/decompose/value/MutableValue : com/arkivanov/decompose/value/Value {
	public fun <init> ()V
	public abstract fun getValue ()Ljava/lang/Object;
	public abstract fun setValue (Ljava/lang/Object;)V
}

public final class com/arkivanov/decompose/value/MutableValueBuilderKt {
	public static final fun MutableValue (Ljava/lang/Object;)Lcom/arkivanov/decompose/value/MutableValue;
}

public final class com/arkivanov/decompose/value/MutableValueExtKt {
	public static final fun reduce (Lcom/arkivanov/decompose/value/MutableValue;Lkotlin/jvm/functions/Function1;)V
}

public final class com/arkivanov/decompose/value/ObserveLifecycleMode : java/lang/Enum {
	public static final field CREATE_DESTROY Lcom/arkivanov/decompose/value/ObserveLifecycleMode;
	public static final field RESUME_PAUSE Lcom/arkivanov/decompose/value/ObserveLifecycleMode;
	public static final field START_STOP Lcom/arkivanov/decompose/value/ObserveLifecycleMode;
	public static fun valueOf (Ljava/lang/String;)Lcom/arkivanov/decompose/value/ObserveLifecycleMode;
	public static fun values ()[Lcom/arkivanov/decompose/value/ObserveLifecycleMode;
}

public abstract class com/arkivanov/decompose/value/Value {
	public fun <init> ()V
	public abstract fun getValue ()Ljava/lang/Object;
	public abstract fun subscribe (Lkotlin/jvm/functions/Function1;)V
	public abstract fun unsubscribe (Lkotlin/jvm/functions/Function1;)V
}

public final class com/arkivanov/decompose/value/ValueExtKt {
	public static final fun getValue (Lcom/arkivanov/decompose/value/Value;Ljava/lang/Object;Lkotlin/reflect/KProperty;)Ljava/lang/Object;
	public static final fun observe (Lcom/arkivanov/decompose/value/Value;Lcom/arkivanov/essenty/lifecycle/Lifecycle;Lcom/arkivanov/decompose/value/ObserveLifecycleMode;Lkotlin/jvm/functions/Function1;)V
	public static synthetic fun observe$default (Lcom/arkivanov/decompose/value/Value;Lcom/arkivanov/essenty/lifecycle/Lifecycle;Lcom/arkivanov/decompose/value/ObserveLifecycleMode;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)V
}

public final class com/arkivanov/decompose/value/operator/MapKt {
	public static final fun map (Lcom/arkivanov/decompose/value/Value;Lkotlin/jvm/functions/Function1;)Lcom/arkivanov/decompose/value/Value;
}

