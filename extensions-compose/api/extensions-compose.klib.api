// Klib ABI Dump
// Targets: [iosArm64, iosSimulatorArm64, iosX64, js, macosArm64, macosX64, wasmJs]
// Rendering settings:
// - Signature version: 2
// - Show manifest properties: true
// - Show declarations: true

// Library unique name: <com.arkivanov.decompose:extensions-compose>
final enum class com.arkivanov.decompose.extensions.compose.stack.animation/Direction : kotlin/Enum<com.arkivanov.decompose.extensions.compose.stack.animation/Direction> { // com.arkivanov.decompose.extensions.compose.stack.animation/Direction|null[0]
    enum entry ENTER_BACK // com.arkivanov.decompose.extensions.compose.stack.animation/Direction.ENTER_BACK|null[0]
    enum entry ENTER_FRONT // com.arkivanov.decompose.extensions.compose.stack.animation/Direction.ENTER_FRONT|null[0]
    enum entry EXIT_BACK // com.arkivanov.decompose.extensions.compose.stack.animation/Direction.EXIT_BACK|null[0]
    enum entry EXIT_FRONT // com.arkivanov.decompose.extensions.compose.stack.animation/Direction.EXIT_FRONT|null[0]

    final val entries // com.arkivanov.decompose.extensions.compose.stack.animation/Direction.entries|#static{}entries[0]
        final fun <get-entries>(): kotlin.enums/EnumEntries<com.arkivanov.decompose.extensions.compose.stack.animation/Direction> // com.arkivanov.decompose.extensions.compose.stack.animation/Direction.entries.<get-entries>|<get-entries>#static(){}[0]

    final fun valueOf(kotlin/String): com.arkivanov.decompose.extensions.compose.stack.animation/Direction // com.arkivanov.decompose.extensions.compose.stack.animation/Direction.valueOf|valueOf#static(kotlin.String){}[0]
    final fun values(): kotlin/Array<com.arkivanov.decompose.extensions.compose.stack.animation/Direction> // com.arkivanov.decompose.extensions.compose.stack.animation/Direction.values|values#static(){}[0]
}

abstract fun interface <#A: kotlin/Any, #B: kotlin/Any> com.arkivanov.decompose.extensions.compose.stack.animation/StackAnimation { // com.arkivanov.decompose.extensions.compose.stack.animation/StackAnimation|null[0]
    abstract fun invoke(com.arkivanov.decompose.router.stack/ChildStack<#A, #B>, androidx.compose.ui/Modifier, kotlin/Function3<com.arkivanov.decompose/Child.Created<#A, #B>, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>, androidx.compose.runtime/Composer?, kotlin/Int) // com.arkivanov.decompose.extensions.compose.stack.animation/StackAnimation.invoke|invoke(com.arkivanov.decompose.router.stack.ChildStack<1:0,1:1>;androidx.compose.ui.Modifier;kotlin.Function3<com.arkivanov.decompose.Child.Created<1:0,1:1>,androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>;androidx.compose.runtime.Composer?;kotlin.Int){}[0]
}

abstract fun interface com.arkivanov.decompose.extensions.compose.stack.animation/StackAnimator { // com.arkivanov.decompose.extensions.compose.stack.animation/StackAnimator|null[0]
    abstract fun invoke(com.arkivanov.decompose.extensions.compose.stack.animation/Direction, kotlin/Boolean, kotlin/Function0<kotlin/Unit>, kotlin/Function3<androidx.compose.ui/Modifier, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>, androidx.compose.runtime/Composer?, kotlin/Int) // com.arkivanov.decompose.extensions.compose.stack.animation/StackAnimator.invoke|invoke(com.arkivanov.decompose.extensions.compose.stack.animation.Direction;kotlin.Boolean;kotlin.Function0<kotlin.Unit>;kotlin.Function3<androidx.compose.ui.Modifier,androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>;androidx.compose.runtime.Composer?;kotlin.Int){}[0]
}

abstract interface com.arkivanov.decompose.extensions.compose.stack.animation.predictiveback/PredictiveBackAnimatable { // com.arkivanov.decompose.extensions.compose.stack.animation.predictiveback/PredictiveBackAnimatable|null[0]
    abstract val enterModifier // com.arkivanov.decompose.extensions.compose.stack.animation.predictiveback/PredictiveBackAnimatable.enterModifier|{}enterModifier[0]
        abstract fun <get-enterModifier>(): androidx.compose.ui/Modifier // com.arkivanov.decompose.extensions.compose.stack.animation.predictiveback/PredictiveBackAnimatable.enterModifier.<get-enterModifier>|<get-enterModifier>(){}[0]
    abstract val exitModifier // com.arkivanov.decompose.extensions.compose.stack.animation.predictiveback/PredictiveBackAnimatable.exitModifier|{}exitModifier[0]
        abstract fun <get-exitModifier>(): androidx.compose.ui/Modifier // com.arkivanov.decompose.extensions.compose.stack.animation.predictiveback/PredictiveBackAnimatable.exitModifier.<get-exitModifier>|<get-exitModifier>(){}[0]

    abstract suspend fun animate(com.arkivanov.essenty.backhandler/BackEvent) // com.arkivanov.decompose.extensions.compose.stack.animation.predictiveback/PredictiveBackAnimatable.animate|animate(com.arkivanov.essenty.backhandler.BackEvent){}[0]
    abstract suspend fun cancel() // com.arkivanov.decompose.extensions.compose.stack.animation.predictiveback/PredictiveBackAnimatable.cancel|cancel(){}[0]
    abstract suspend fun finish() // com.arkivanov.decompose.extensions.compose.stack.animation.predictiveback/PredictiveBackAnimatable.finish|finish(){}[0]
}

abstract interface com.arkivanov.decompose.extensions.compose.stack.animation/StackAnimationProvider { // com.arkivanov.decompose.extensions.compose.stack.animation/StackAnimationProvider|null[0]
    abstract fun <#A1: kotlin/Any, #B1: kotlin/Any> provide(): com.arkivanov.decompose.extensions.compose.stack.animation/StackAnimation<#A1, #B1>? // com.arkivanov.decompose.extensions.compose.stack.animation/StackAnimationProvider.provide|provide(){0ยง<kotlin.Any>;1ยง<kotlin.Any>}[0]
}

sealed interface com.arkivanov.decompose.extensions.compose.pages/PagesScrollAnimation { // com.arkivanov.decompose.extensions.compose.pages/PagesScrollAnimation|null[0]
    final class Custom : com.arkivanov.decompose.extensions.compose.pages/PagesScrollAnimation { // com.arkivanov.decompose.extensions.compose.pages/PagesScrollAnimation.Custom|null[0]
        constructor <init>(androidx.compose.animation.core/AnimationSpec<kotlin/Float>) // com.arkivanov.decompose.extensions.compose.pages/PagesScrollAnimation.Custom.<init>|<init>(androidx.compose.animation.core.AnimationSpec<kotlin.Float>){}[0]

        final val spec // com.arkivanov.decompose.extensions.compose.pages/PagesScrollAnimation.Custom.spec|{}spec[0]
            final fun <get-spec>(): androidx.compose.animation.core/AnimationSpec<kotlin/Float> // com.arkivanov.decompose.extensions.compose.pages/PagesScrollAnimation.Custom.spec.<get-spec>|<get-spec>(){}[0]
    }

    final object Default : com.arkivanov.decompose.extensions.compose.pages/PagesScrollAnimation { // com.arkivanov.decompose.extensions.compose.pages/PagesScrollAnimation.Default|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // com.arkivanov.decompose.extensions.compose.pages/PagesScrollAnimation.Default.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // com.arkivanov.decompose.extensions.compose.pages/PagesScrollAnimation.Default.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // com.arkivanov.decompose.extensions.compose.pages/PagesScrollAnimation.Default.toString|toString(){}[0]
    }

    final object Disabled : com.arkivanov.decompose.extensions.compose.pages/PagesScrollAnimation { // com.arkivanov.decompose.extensions.compose.pages/PagesScrollAnimation.Disabled|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // com.arkivanov.decompose.extensions.compose.pages/PagesScrollAnimation.Disabled.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // com.arkivanov.decompose.extensions.compose.pages/PagesScrollAnimation.Disabled.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // com.arkivanov.decompose.extensions.compose.pages/PagesScrollAnimation.Disabled.toString|toString(){}[0]
    }
}

final val com.arkivanov.decompose.extensions.compose.pages/com_arkivanov_decompose_extensions_compose_pages_PagesScrollAnimation_Custom$stableprop // com.arkivanov.decompose.extensions.compose.pages/com_arkivanov_decompose_extensions_compose_pages_PagesScrollAnimation_Custom$stableprop|#static{}com_arkivanov_decompose_extensions_compose_pages_PagesScrollAnimation_Custom$stableprop[0]
final val com.arkivanov.decompose.extensions.compose.pages/com_arkivanov_decompose_extensions_compose_pages_PagesScrollAnimation_Default$stableprop // com.arkivanov.decompose.extensions.compose.pages/com_arkivanov_decompose_extensions_compose_pages_PagesScrollAnimation_Default$stableprop|#static{}com_arkivanov_decompose_extensions_compose_pages_PagesScrollAnimation_Default$stableprop[0]
final val com.arkivanov.decompose.extensions.compose.pages/com_arkivanov_decompose_extensions_compose_pages_PagesScrollAnimation_Disabled$stableprop // com.arkivanov.decompose.extensions.compose.pages/com_arkivanov_decompose_extensions_compose_pages_PagesScrollAnimation_Disabled$stableprop|#static{}com_arkivanov_decompose_extensions_compose_pages_PagesScrollAnimation_Disabled$stableprop[0]
final val com.arkivanov.decompose.extensions.compose.stack.animation.predictiveback/com_arkivanov_decompose_extensions_compose_stack_animation_predictiveback_AndroidPredictiveBackAnimatableV1$stableprop // com.arkivanov.decompose.extensions.compose.stack.animation.predictiveback/com_arkivanov_decompose_extensions_compose_stack_animation_predictiveback_AndroidPredictiveBackAnimatableV1$stableprop|#static{}com_arkivanov_decompose_extensions_compose_stack_animation_predictiveback_AndroidPredictiveBackAnimatableV1$stableprop[0]
final val com.arkivanov.decompose.extensions.compose.stack.animation.predictiveback/com_arkivanov_decompose_extensions_compose_stack_animation_predictiveback_DefaultPredictiveBackAnimatable$stableprop // com.arkivanov.decompose.extensions.compose.stack.animation.predictiveback/com_arkivanov_decompose_extensions_compose_stack_animation_predictiveback_DefaultPredictiveBackAnimatable$stableprop|#static{}com_arkivanov_decompose_extensions_compose_stack_animation_predictiveback_DefaultPredictiveBackAnimatable$stableprop[0]
final val com.arkivanov.decompose.extensions.compose.stack.animation.predictiveback/com_arkivanov_decompose_extensions_compose_stack_animation_predictiveback_LayoutCorner$stableprop // com.arkivanov.decompose.extensions.compose.stack.animation.predictiveback/com_arkivanov_decompose_extensions_compose_stack_animation_predictiveback_LayoutCorner$stableprop|#static{}com_arkivanov_decompose_extensions_compose_stack_animation_predictiveback_LayoutCorner$stableprop[0]
final val com.arkivanov.decompose.extensions.compose.stack.animation.predictiveback/com_arkivanov_decompose_extensions_compose_stack_animation_predictiveback_LayoutCorners$stableprop // com.arkivanov.decompose.extensions.compose.stack.animation.predictiveback/com_arkivanov_decompose_extensions_compose_stack_animation_predictiveback_LayoutCorners$stableprop|#static{}com_arkivanov_decompose_extensions_compose_stack_animation_predictiveback_LayoutCorners$stableprop[0]
final val com.arkivanov.decompose.extensions.compose.stack.animation/LocalStackAnimationProvider // com.arkivanov.decompose.extensions.compose.stack.animation/LocalStackAnimationProvider|{}LocalStackAnimationProvider[0]
    final fun <get-LocalStackAnimationProvider>(): androidx.compose.runtime/ProvidableCompositionLocal<com.arkivanov.decompose.extensions.compose.stack.animation/StackAnimationProvider> // com.arkivanov.decompose.extensions.compose.stack.animation/LocalStackAnimationProvider.<get-LocalStackAnimationProvider>|<get-LocalStackAnimationProvider>(){}[0]
final val com.arkivanov.decompose.extensions.compose.stack.animation/com_arkivanov_decompose_extensions_compose_stack_animation_AbstractStackAnimation$stableprop // com.arkivanov.decompose.extensions.compose.stack.animation/com_arkivanov_decompose_extensions_compose_stack_animation_AbstractStackAnimation$stableprop|#static{}com_arkivanov_decompose_extensions_compose_stack_animation_AbstractStackAnimation$stableprop[0]
final val com.arkivanov.decompose.extensions.compose.stack.animation/com_arkivanov_decompose_extensions_compose_stack_animation_DefaultStackAnimator$stableprop // com.arkivanov.decompose.extensions.compose.stack.animation/com_arkivanov_decompose_extensions_compose_stack_animation_DefaultStackAnimator$stableprop|#static{}com_arkivanov_decompose_extensions_compose_stack_animation_DefaultStackAnimator$stableprop[0]
final val com.arkivanov.decompose.extensions.compose.stack.animation/com_arkivanov_decompose_extensions_compose_stack_animation_EmptyStackAnimator$stableprop // com.arkivanov.decompose.extensions.compose.stack.animation/com_arkivanov_decompose_extensions_compose_stack_animation_EmptyStackAnimator$stableprop|#static{}com_arkivanov_decompose_extensions_compose_stack_animation_EmptyStackAnimator$stableprop[0]
final val com.arkivanov.decompose.extensions.compose.stack.animation/com_arkivanov_decompose_extensions_compose_stack_animation_MovableStackAnimation$stableprop // com.arkivanov.decompose.extensions.compose.stack.animation/com_arkivanov_decompose_extensions_compose_stack_animation_MovableStackAnimation$stableprop|#static{}com_arkivanov_decompose_extensions_compose_stack_animation_MovableStackAnimation$stableprop[0]
final val com.arkivanov.decompose.extensions.compose.stack.animation/com_arkivanov_decompose_extensions_compose_stack_animation_SimpleStackAnimation$stableprop // com.arkivanov.decompose.extensions.compose.stack.animation/com_arkivanov_decompose_extensions_compose_stack_animation_SimpleStackAnimation$stableprop|#static{}com_arkivanov_decompose_extensions_compose_stack_animation_SimpleStackAnimation$stableprop[0]
final val com.arkivanov.decompose.extensions.compose.stack.animation/isBack // com.arkivanov.decompose.extensions.compose.stack.animation/isBack|@com.arkivanov.decompose.extensions.compose.stack.animation.Direction{}isBack[0]
    final fun (com.arkivanov.decompose.extensions.compose.stack.animation/Direction).<get-isBack>(): kotlin/Boolean // com.arkivanov.decompose.extensions.compose.stack.animation/isBack.<get-isBack>|<get-isBack>@com.arkivanov.decompose.extensions.compose.stack.animation.Direction(){}[0]
final val com.arkivanov.decompose.extensions.compose.stack.animation/isEnter // com.arkivanov.decompose.extensions.compose.stack.animation/isEnter|@com.arkivanov.decompose.extensions.compose.stack.animation.Direction{}isEnter[0]
    final fun (com.arkivanov.decompose.extensions.compose.stack.animation/Direction).<get-isEnter>(): kotlin/Boolean // com.arkivanov.decompose.extensions.compose.stack.animation/isEnter.<get-isEnter>|<get-isEnter>@com.arkivanov.decompose.extensions.compose.stack.animation.Direction(){}[0]
final val com.arkivanov.decompose.extensions.compose.stack.animation/isExit // com.arkivanov.decompose.extensions.compose.stack.animation/isExit|@com.arkivanov.decompose.extensions.compose.stack.animation.Direction{}isExit[0]
    final fun (com.arkivanov.decompose.extensions.compose.stack.animation/Direction).<get-isExit>(): kotlin/Boolean // com.arkivanov.decompose.extensions.compose.stack.animation/isExit.<get-isExit>|<get-isExit>@com.arkivanov.decompose.extensions.compose.stack.animation.Direction(){}[0]
final val com.arkivanov.decompose.extensions.compose.stack.animation/isFront // com.arkivanov.decompose.extensions.compose.stack.animation/isFront|@com.arkivanov.decompose.extensions.compose.stack.animation.Direction{}isFront[0]
    final fun (com.arkivanov.decompose.extensions.compose.stack.animation/Direction).<get-isFront>(): kotlin/Boolean // com.arkivanov.decompose.extensions.compose.stack.animation/isFront.<get-isFront>|<get-isFront>@com.arkivanov.decompose.extensions.compose.stack.animation.Direction(){}[0]

final fun (com.arkivanov.decompose.extensions.compose.stack.animation/StackAnimator).com.arkivanov.decompose.extensions.compose.stack.animation/plus(com.arkivanov.decompose.extensions.compose.stack.animation/StackAnimator): com.arkivanov.decompose.extensions.compose.stack.animation/StackAnimator // com.arkivanov.decompose.extensions.compose.stack.animation/plus|plus@com.arkivanov.decompose.extensions.compose.stack.animation.StackAnimator(com.arkivanov.decompose.extensions.compose.stack.animation.StackAnimator){}[0]
final fun <#A: kotlin/Any, #B: kotlin/Any> com.arkivanov.decompose.extensions.compose.pages/ChildPages(com.arkivanov.decompose.router.pages/ChildPages<#A, #B>, kotlin/Function1<kotlin/Int, kotlin/Unit>, androidx.compose.ui/Modifier?, com.arkivanov.decompose.extensions.compose.pages/PagesScrollAnimation?, kotlin/Function6<androidx.compose.ui/Modifier, androidx.compose.foundation.pager/PagerState, kotlin/Function1<kotlin/Int, kotlin/Any>, kotlin/Function4<androidx.compose.foundation.pager/PagerScope, kotlin/Int, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>?, kotlin/Function1<com.arkivanov.decompose/Child<#A, #B>, kotlin/Any>?, kotlin/Function5<androidx.compose.foundation.pager/PagerScope, kotlin/Int, #B, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int) // com.arkivanov.decompose.extensions.compose.pages/ChildPages|ChildPages(com.arkivanov.decompose.router.pages.ChildPages<0:0,0:1>;kotlin.Function1<kotlin.Int,kotlin.Unit>;androidx.compose.ui.Modifier?;com.arkivanov.decompose.extensions.compose.pages.PagesScrollAnimation?;kotlin.Function6<androidx.compose.ui.Modifier,androidx.compose.foundation.pager.PagerState,kotlin.Function1<kotlin.Int,kotlin.Any>,kotlin.Function4<androidx.compose.foundation.pager.PagerScope,kotlin.Int,androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>,androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>?;kotlin.Function1<com.arkivanov.decompose.Child<0:0,0:1>,kotlin.Any>?;kotlin.Function5<androidx.compose.foundation.pager.PagerScope,kotlin.Int,0:1,androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int){0ยง<kotlin.Any>;1ยง<kotlin.Any>}[0]
final fun <#A: kotlin/Any, #B: kotlin/Any> com.arkivanov.decompose.extensions.compose.pages/ChildPages(com.arkivanov.decompose.value/Value<com.arkivanov.decompose.router.pages/ChildPages<#A, #B>>, kotlin/Function1<kotlin/Int, kotlin/Unit>, androidx.compose.ui/Modifier?, com.arkivanov.decompose.extensions.compose.pages/PagesScrollAnimation?, kotlin/Function6<androidx.compose.ui/Modifier, androidx.compose.foundation.pager/PagerState, kotlin/Function1<kotlin/Int, kotlin/Any>, kotlin/Function4<androidx.compose.foundation.pager/PagerScope, kotlin/Int, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>?, kotlin/Function1<com.arkivanov.decompose/Child<#A, #B>, kotlin/Any>?, kotlin/Function5<androidx.compose.foundation.pager/PagerScope, kotlin/Int, #B, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int) // com.arkivanov.decompose.extensions.compose.pages/ChildPages|ChildPages(com.arkivanov.decompose.value.Value<com.arkivanov.decompose.router.pages.ChildPages<0:0,0:1>>;kotlin.Function1<kotlin.Int,kotlin.Unit>;androidx.compose.ui.Modifier?;com.arkivanov.decompose.extensions.compose.pages.PagesScrollAnimation?;kotlin.Function6<androidx.compose.ui.Modifier,androidx.compose.foundation.pager.PagerState,kotlin.Function1<kotlin.Int,kotlin.Any>,kotlin.Function4<androidx.compose.foundation.pager.PagerScope,kotlin.Int,androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>,androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>?;kotlin.Function1<com.arkivanov.decompose.Child<0:0,0:1>,kotlin.Any>?;kotlin.Function5<androidx.compose.foundation.pager.PagerScope,kotlin.Int,0:1,androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int){0ยง<kotlin.Any>;1ยง<kotlin.Any>}[0]
final fun <#A: kotlin/Any, #B: kotlin/Any> com.arkivanov.decompose.extensions.compose.stack.animation.predictiveback/predictiveBackAnimation(com.arkivanov.essenty.backhandler/BackHandler, com.arkivanov.decompose.extensions.compose.stack.animation/StackAnimation<#A, #B>? = ..., kotlin/Function3<com.arkivanov.essenty.backhandler/BackEvent, com.arkivanov.decompose/Child.Created<#A, #B>, com.arkivanov.decompose/Child.Created<#A, #B>, com.arkivanov.decompose.extensions.compose.stack.animation.predictiveback/PredictiveBackAnimatable> = ..., kotlin/Function0<kotlin/Unit>): com.arkivanov.decompose.extensions.compose.stack.animation/StackAnimation<#A, #B> // com.arkivanov.decompose.extensions.compose.stack.animation.predictiveback/predictiveBackAnimation|predictiveBackAnimation(com.arkivanov.essenty.backhandler.BackHandler;com.arkivanov.decompose.extensions.compose.stack.animation.StackAnimation<0:0,0:1>?;kotlin.Function3<com.arkivanov.essenty.backhandler.BackEvent,com.arkivanov.decompose.Child.Created<0:0,0:1>,com.arkivanov.decompose.Child.Created<0:0,0:1>,com.arkivanov.decompose.extensions.compose.stack.animation.predictiveback.PredictiveBackAnimatable>;kotlin.Function0<kotlin.Unit>){0ยง<kotlin.Any>;1ยง<kotlin.Any>}[0]
final fun <#A: kotlin/Any, #B: kotlin/Any> com.arkivanov.decompose.extensions.compose.stack.animation/stackAnimation(com.arkivanov.decompose.extensions.compose.stack.animation/StackAnimator = ..., kotlin/Boolean = ...): com.arkivanov.decompose.extensions.compose.stack.animation/StackAnimation<#A, #B> // com.arkivanov.decompose.extensions.compose.stack.animation/stackAnimation|stackAnimation(com.arkivanov.decompose.extensions.compose.stack.animation.StackAnimator;kotlin.Boolean){0ยง<kotlin.Any>;1ยง<kotlin.Any>}[0]
final fun <#A: kotlin/Any, #B: kotlin/Any> com.arkivanov.decompose.extensions.compose.stack.animation/stackAnimation(kotlin/Boolean = ..., kotlin/Function1<com.arkivanov.decompose/Child.Created<#A, #B>, com.arkivanov.decompose.extensions.compose.stack.animation/StackAnimator?>): com.arkivanov.decompose.extensions.compose.stack.animation/StackAnimation<#A, #B> // com.arkivanov.decompose.extensions.compose.stack.animation/stackAnimation|stackAnimation(kotlin.Boolean;kotlin.Function1<com.arkivanov.decompose.Child.Created<0:0,0:1>,com.arkivanov.decompose.extensions.compose.stack.animation.StackAnimator?>){0ยง<kotlin.Any>;1ยง<kotlin.Any>}[0]
final fun <#A: kotlin/Any, #B: kotlin/Any> com.arkivanov.decompose.extensions.compose.stack.animation/stackAnimation(kotlin/Boolean = ..., kotlin/Function3<com.arkivanov.decompose/Child.Created<#A, #B>, com.arkivanov.decompose/Child.Created<#A, #B>, com.arkivanov.decompose.extensions.compose.stack.animation/Direction, com.arkivanov.decompose.extensions.compose.stack.animation/StackAnimator?>): com.arkivanov.decompose.extensions.compose.stack.animation/StackAnimation<#A, #B> // com.arkivanov.decompose.extensions.compose.stack.animation/stackAnimation|stackAnimation(kotlin.Boolean;kotlin.Function3<com.arkivanov.decompose.Child.Created<0:0,0:1>,com.arkivanov.decompose.Child.Created<0:0,0:1>,com.arkivanov.decompose.extensions.compose.stack.animation.Direction,com.arkivanov.decompose.extensions.compose.stack.animation.StackAnimator?>){0ยง<kotlin.Any>;1ยง<kotlin.Any>}[0]
final fun <#A: kotlin/Any, #B: kotlin/Any> com.arkivanov.decompose.extensions.compose.stack/Children(com.arkivanov.decompose.router.stack/ChildStack<#A, #B>, androidx.compose.ui/Modifier?, com.arkivanov.decompose.extensions.compose.stack.animation/StackAnimation<#A, #B>?, kotlin/Function3<com.arkivanov.decompose/Child.Created<#A, #B>, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int) // com.arkivanov.decompose.extensions.compose.stack/Children|Children(com.arkivanov.decompose.router.stack.ChildStack<0:0,0:1>;androidx.compose.ui.Modifier?;com.arkivanov.decompose.extensions.compose.stack.animation.StackAnimation<0:0,0:1>?;kotlin.Function3<com.arkivanov.decompose.Child.Created<0:0,0:1>,androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int){0ยง<kotlin.Any>;1ยง<kotlin.Any>}[0]
final fun <#A: kotlin/Any, #B: kotlin/Any> com.arkivanov.decompose.extensions.compose.stack/Children(com.arkivanov.decompose.value/Value<com.arkivanov.decompose.router.stack/ChildStack<#A, #B>>, androidx.compose.ui/Modifier?, com.arkivanov.decompose.extensions.compose.stack.animation/StackAnimation<#A, #B>?, kotlin/Function3<com.arkivanov.decompose/Child.Created<#A, #B>, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int) // com.arkivanov.decompose.extensions.compose.stack/Children|Children(com.arkivanov.decompose.value.Value<com.arkivanov.decompose.router.stack.ChildStack<0:0,0:1>>;androidx.compose.ui.Modifier?;com.arkivanov.decompose.extensions.compose.stack.animation.StackAnimation<0:0,0:1>?;kotlin.Function3<com.arkivanov.decompose.Child.Created<0:0,0:1>,androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int){0ยง<kotlin.Any>;1ยง<kotlin.Any>}[0]
final fun <#A: kotlin/Any> (com.arkivanov.decompose.value/Value<#A>).com.arkivanov.decompose.extensions.compose/subscribeAsState(androidx.compose.runtime/SnapshotMutationPolicy<#A>?, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int): androidx.compose.runtime/State<#A> // com.arkivanov.decompose.extensions.compose/subscribeAsState|subscribeAsState@com.arkivanov.decompose.value.Value<0:0>(androidx.compose.runtime.SnapshotMutationPolicy<0:0>?;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int){0ยง<kotlin.Any>}[0]
final fun <#A: kotlin/Any> com.arkivanov.decompose.extensions.compose.lazyitems/ChildItemsLifecycleController(com.arkivanov.decompose.router.items/LazyChildItems<#A, *>, androidx.compose.foundation.lazy.grid/LazyGridState, kotlin/Function1<kotlin/Int, kotlin/Int>, kotlin/Int, kotlin/Int, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int) // com.arkivanov.decompose.extensions.compose.lazyitems/ChildItemsLifecycleController|ChildItemsLifecycleController(com.arkivanov.decompose.router.items.LazyChildItems<0:0,*>;androidx.compose.foundation.lazy.grid.LazyGridState;kotlin.Function1<kotlin.Int,kotlin.Int>;kotlin.Int;kotlin.Int;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int){0ยง<kotlin.Any>}[0]
final fun <#A: kotlin/Any> com.arkivanov.decompose.extensions.compose.lazyitems/ChildItemsLifecycleController(com.arkivanov.decompose.router.items/LazyChildItems<#A, *>, androidx.compose.foundation.lazy/LazyListState, kotlin/Function1<kotlin/Int, kotlin/Int>, kotlin/Int, kotlin/Int, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int) // com.arkivanov.decompose.extensions.compose.lazyitems/ChildItemsLifecycleController|ChildItemsLifecycleController(com.arkivanov.decompose.router.items.LazyChildItems<0:0,*>;androidx.compose.foundation.lazy.LazyListState;kotlin.Function1<kotlin.Int,kotlin.Int>;kotlin.Int;kotlin.Int;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int){0ยง<kotlin.Any>}[0]
final fun com.arkivanov.decompose.extensions.compose.pages/com_arkivanov_decompose_extensions_compose_pages_PagesScrollAnimation_Custom$stableprop_getter(): kotlin/Int // com.arkivanov.decompose.extensions.compose.pages/com_arkivanov_decompose_extensions_compose_pages_PagesScrollAnimation_Custom$stableprop_getter|com_arkivanov_decompose_extensions_compose_pages_PagesScrollAnimation_Custom$stableprop_getter(){}[0]
final fun com.arkivanov.decompose.extensions.compose.pages/com_arkivanov_decompose_extensions_compose_pages_PagesScrollAnimation_Default$stableprop_getter(): kotlin/Int // com.arkivanov.decompose.extensions.compose.pages/com_arkivanov_decompose_extensions_compose_pages_PagesScrollAnimation_Default$stableprop_getter|com_arkivanov_decompose_extensions_compose_pages_PagesScrollAnimation_Default$stableprop_getter(){}[0]
final fun com.arkivanov.decompose.extensions.compose.pages/com_arkivanov_decompose_extensions_compose_pages_PagesScrollAnimation_Disabled$stableprop_getter(): kotlin/Int // com.arkivanov.decompose.extensions.compose.pages/com_arkivanov_decompose_extensions_compose_pages_PagesScrollAnimation_Disabled$stableprop_getter|com_arkivanov_decompose_extensions_compose_pages_PagesScrollAnimation_Disabled$stableprop_getter(){}[0]
final fun com.arkivanov.decompose.extensions.compose.pages/defaultHorizontalPager(): kotlin/Function6<androidx.compose.ui/Modifier, androidx.compose.foundation.pager/PagerState, kotlin/Function1<kotlin/Int, kotlin/Any>, kotlin/Function4<androidx.compose.foundation.pager/PagerScope, kotlin/Int, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit> // com.arkivanov.decompose.extensions.compose.pages/defaultHorizontalPager|defaultHorizontalPager(){}[0]
final fun com.arkivanov.decompose.extensions.compose.pages/defaultVerticalPager(): kotlin/Function6<androidx.compose.ui/Modifier, androidx.compose.foundation.pager/PagerState, kotlin/Function1<kotlin/Int, kotlin/Any>, kotlin/Function4<androidx.compose.foundation.pager/PagerScope, kotlin/Int, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit> // com.arkivanov.decompose.extensions.compose.pages/defaultVerticalPager|defaultVerticalPager(){}[0]
final fun com.arkivanov.decompose.extensions.compose.stack.animation.predictiveback/PredictiveBackGestureIcon(androidx.compose.ui.graphics.vector/ImageVector, kotlin/Float, androidx.compose.ui.graphics/Color, androidx.compose.ui.graphics/Color, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int) // com.arkivanov.decompose.extensions.compose.stack.animation.predictiveback/PredictiveBackGestureIcon|PredictiveBackGestureIcon(androidx.compose.ui.graphics.vector.ImageVector;kotlin.Float;androidx.compose.ui.graphics.Color;androidx.compose.ui.graphics.Color;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int){}[0]
final fun com.arkivanov.decompose.extensions.compose.stack.animation.predictiveback/PredictiveBackGestureOverlay(com.arkivanov.essenty.backhandler/BackDispatcher, kotlin/Function4<kotlin/Float, com.arkivanov.essenty.backhandler/BackEvent.SwipeEdge, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>?, androidx.compose.ui/Modifier?, kotlin/Boolean, kotlin/Boolean, androidx.compose.ui.unit/Dp, androidx.compose.ui.unit/Dp, kotlin/Float, kotlin/Function0<kotlin/Unit>?, kotlin/Function2<androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int) // com.arkivanov.decompose.extensions.compose.stack.animation.predictiveback/PredictiveBackGestureOverlay|PredictiveBackGestureOverlay(com.arkivanov.essenty.backhandler.BackDispatcher;kotlin.Function4<kotlin.Float,com.arkivanov.essenty.backhandler.BackEvent.SwipeEdge,androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>?;androidx.compose.ui.Modifier?;kotlin.Boolean;kotlin.Boolean;androidx.compose.ui.unit.Dp;androidx.compose.ui.unit.Dp;kotlin.Float;kotlin.Function0<kotlin.Unit>?;kotlin.Function2<androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int){}[0]
final fun com.arkivanov.decompose.extensions.compose.stack.animation.predictiveback/androidPredictiveBackAnimatable(com.arkivanov.essenty.backhandler/BackEvent, kotlin/Function2<kotlin/Float, com.arkivanov.essenty.backhandler/BackEvent.SwipeEdge, androidx.compose.ui.graphics/Shape>? = ..., kotlin/Function2<kotlin/Float, com.arkivanov.essenty.backhandler/BackEvent.SwipeEdge, androidx.compose.ui.graphics/Shape>? = ...): com.arkivanov.decompose.extensions.compose.stack.animation.predictiveback/PredictiveBackAnimatable // com.arkivanov.decompose.extensions.compose.stack.animation.predictiveback/androidPredictiveBackAnimatable|androidPredictiveBackAnimatable(com.arkivanov.essenty.backhandler.BackEvent;kotlin.Function2<kotlin.Float,com.arkivanov.essenty.backhandler.BackEvent.SwipeEdge,androidx.compose.ui.graphics.Shape>?;kotlin.Function2<kotlin.Float,com.arkivanov.essenty.backhandler.BackEvent.SwipeEdge,androidx.compose.ui.graphics.Shape>?){}[0]
final fun com.arkivanov.decompose.extensions.compose.stack.animation.predictiveback/androidPredictiveBackAnimatableV1(com.arkivanov.essenty.backhandler/BackEvent, kotlin/Function2<kotlin/Float, com.arkivanov.essenty.backhandler/BackEvent.SwipeEdge, androidx.compose.ui.graphics/Shape>? = ..., kotlin/Function2<kotlin/Float, com.arkivanov.essenty.backhandler/BackEvent.SwipeEdge, androidx.compose.ui.graphics/Shape>? = ...): com.arkivanov.decompose.extensions.compose.stack.animation.predictiveback/PredictiveBackAnimatable // com.arkivanov.decompose.extensions.compose.stack.animation.predictiveback/androidPredictiveBackAnimatableV1|androidPredictiveBackAnimatableV1(com.arkivanov.essenty.backhandler.BackEvent;kotlin.Function2<kotlin.Float,com.arkivanov.essenty.backhandler.BackEvent.SwipeEdge,androidx.compose.ui.graphics.Shape>?;kotlin.Function2<kotlin.Float,com.arkivanov.essenty.backhandler.BackEvent.SwipeEdge,androidx.compose.ui.graphics.Shape>?){}[0]
final fun com.arkivanov.decompose.extensions.compose.stack.animation.predictiveback/com_arkivanov_decompose_extensions_compose_stack_animation_predictiveback_AndroidPredictiveBackAnimatableV1$stableprop_getter(): kotlin/Int // com.arkivanov.decompose.extensions.compose.stack.animation.predictiveback/com_arkivanov_decompose_extensions_compose_stack_animation_predictiveback_AndroidPredictiveBackAnimatableV1$stableprop_getter|com_arkivanov_decompose_extensions_compose_stack_animation_predictiveback_AndroidPredictiveBackAnimatableV1$stableprop_getter(){}[0]
final fun com.arkivanov.decompose.extensions.compose.stack.animation.predictiveback/com_arkivanov_decompose_extensions_compose_stack_animation_predictiveback_DefaultPredictiveBackAnimatable$stableprop_getter(): kotlin/Int // com.arkivanov.decompose.extensions.compose.stack.animation.predictiveback/com_arkivanov_decompose_extensions_compose_stack_animation_predictiveback_DefaultPredictiveBackAnimatable$stableprop_getter|com_arkivanov_decompose_extensions_compose_stack_animation_predictiveback_DefaultPredictiveBackAnimatable$stableprop_getter(){}[0]
final fun com.arkivanov.decompose.extensions.compose.stack.animation.predictiveback/com_arkivanov_decompose_extensions_compose_stack_animation_predictiveback_LayoutCorner$stableprop_getter(): kotlin/Int // com.arkivanov.decompose.extensions.compose.stack.animation.predictiveback/com_arkivanov_decompose_extensions_compose_stack_animation_predictiveback_LayoutCorner$stableprop_getter|com_arkivanov_decompose_extensions_compose_stack_animation_predictiveback_LayoutCorner$stableprop_getter(){}[0]
final fun com.arkivanov.decompose.extensions.compose.stack.animation.predictiveback/com_arkivanov_decompose_extensions_compose_stack_animation_predictiveback_LayoutCorners$stableprop_getter(): kotlin/Int // com.arkivanov.decompose.extensions.compose.stack.animation.predictiveback/com_arkivanov_decompose_extensions_compose_stack_animation_predictiveback_LayoutCorners$stableprop_getter|com_arkivanov_decompose_extensions_compose_stack_animation_predictiveback_LayoutCorners$stableprop_getter(){}[0]
final fun com.arkivanov.decompose.extensions.compose.stack.animation.predictiveback/materialPredictiveBackAnimatable(com.arkivanov.essenty.backhandler/BackEvent, kotlin/Function2<kotlin/Float, com.arkivanov.essenty.backhandler/BackEvent.SwipeEdge, androidx.compose.ui.graphics/Shape>? = ...): com.arkivanov.decompose.extensions.compose.stack.animation.predictiveback/PredictiveBackAnimatable // com.arkivanov.decompose.extensions.compose.stack.animation.predictiveback/materialPredictiveBackAnimatable|materialPredictiveBackAnimatable(com.arkivanov.essenty.backhandler.BackEvent;kotlin.Function2<kotlin.Float,com.arkivanov.essenty.backhandler.BackEvent.SwipeEdge,androidx.compose.ui.graphics.Shape>?){}[0]
final fun com.arkivanov.decompose.extensions.compose.stack.animation.predictiveback/predictiveBackAnimatable(com.arkivanov.essenty.backhandler/BackEvent, kotlin/Function2<kotlin/Float, com.arkivanov.essenty.backhandler/BackEvent.SwipeEdge, androidx.compose.ui/Modifier>, kotlin/Function2<kotlin/Float, com.arkivanov.essenty.backhandler/BackEvent.SwipeEdge, androidx.compose.ui/Modifier>): com.arkivanov.decompose.extensions.compose.stack.animation.predictiveback/PredictiveBackAnimatable // com.arkivanov.decompose.extensions.compose.stack.animation.predictiveback/predictiveBackAnimatable|predictiveBackAnimatable(com.arkivanov.essenty.backhandler.BackEvent;kotlin.Function2<kotlin.Float,com.arkivanov.essenty.backhandler.BackEvent.SwipeEdge,androidx.compose.ui.Modifier>;kotlin.Function2<kotlin.Float,com.arkivanov.essenty.backhandler.BackEvent.SwipeEdge,androidx.compose.ui.Modifier>){}[0]
final fun com.arkivanov.decompose.extensions.compose.stack.animation/com_arkivanov_decompose_extensions_compose_stack_animation_AbstractStackAnimation$stableprop_getter(): kotlin/Int // com.arkivanov.decompose.extensions.compose.stack.animation/com_arkivanov_decompose_extensions_compose_stack_animation_AbstractStackAnimation$stableprop_getter|com_arkivanov_decompose_extensions_compose_stack_animation_AbstractStackAnimation$stableprop_getter(){}[0]
final fun com.arkivanov.decompose.extensions.compose.stack.animation/com_arkivanov_decompose_extensions_compose_stack_animation_DefaultStackAnimator$stableprop_getter(): kotlin/Int // com.arkivanov.decompose.extensions.compose.stack.animation/com_arkivanov_decompose_extensions_compose_stack_animation_DefaultStackAnimator$stableprop_getter|com_arkivanov_decompose_extensions_compose_stack_animation_DefaultStackAnimator$stableprop_getter(){}[0]
final fun com.arkivanov.decompose.extensions.compose.stack.animation/com_arkivanov_decompose_extensions_compose_stack_animation_EmptyStackAnimator$stableprop_getter(): kotlin/Int // com.arkivanov.decompose.extensions.compose.stack.animation/com_arkivanov_decompose_extensions_compose_stack_animation_EmptyStackAnimator$stableprop_getter|com_arkivanov_decompose_extensions_compose_stack_animation_EmptyStackAnimator$stableprop_getter(){}[0]
final fun com.arkivanov.decompose.extensions.compose.stack.animation/com_arkivanov_decompose_extensions_compose_stack_animation_MovableStackAnimation$stableprop_getter(): kotlin/Int // com.arkivanov.decompose.extensions.compose.stack.animation/com_arkivanov_decompose_extensions_compose_stack_animation_MovableStackAnimation$stableprop_getter|com_arkivanov_decompose_extensions_compose_stack_animation_MovableStackAnimation$stableprop_getter(){}[0]
final fun com.arkivanov.decompose.extensions.compose.stack.animation/com_arkivanov_decompose_extensions_compose_stack_animation_SimpleStackAnimation$stableprop_getter(): kotlin/Int // com.arkivanov.decompose.extensions.compose.stack.animation/com_arkivanov_decompose_extensions_compose_stack_animation_SimpleStackAnimation$stableprop_getter|com_arkivanov_decompose_extensions_compose_stack_animation_SimpleStackAnimation$stableprop_getter(){}[0]
final fun com.arkivanov.decompose.extensions.compose.stack.animation/fade(androidx.compose.animation.core/FiniteAnimationSpec<kotlin/Float> = ..., kotlin/Float = ...): com.arkivanov.decompose.extensions.compose.stack.animation/StackAnimator // com.arkivanov.decompose.extensions.compose.stack.animation/fade|fade(androidx.compose.animation.core.FiniteAnimationSpec<kotlin.Float>;kotlin.Float){}[0]
final fun com.arkivanov.decompose.extensions.compose.stack.animation/scale(androidx.compose.animation.core/FiniteAnimationSpec<kotlin/Float> = ..., kotlin/Float = ..., kotlin/Float = ...): com.arkivanov.decompose.extensions.compose.stack.animation/StackAnimator // com.arkivanov.decompose.extensions.compose.stack.animation/scale|scale(androidx.compose.animation.core.FiniteAnimationSpec<kotlin.Float>;kotlin.Float;kotlin.Float){}[0]
final fun com.arkivanov.decompose.extensions.compose.stack.animation/slide(androidx.compose.animation.core/FiniteAnimationSpec<kotlin/Float> = ..., androidx.compose.foundation.gestures/Orientation = ...): com.arkivanov.decompose.extensions.compose.stack.animation/StackAnimator // com.arkivanov.decompose.extensions.compose.stack.animation/slide|slide(androidx.compose.animation.core.FiniteAnimationSpec<kotlin.Float>;androidx.compose.foundation.gestures.Orientation){}[0]
final fun com.arkivanov.decompose.extensions.compose.stack.animation/stackAnimator(androidx.compose.animation.core/FiniteAnimationSpec<kotlin/Float> = ..., kotlin/Function5<kotlin/Float, com.arkivanov.decompose.extensions.compose.stack.animation/Direction, kotlin/Function3<androidx.compose.ui/Modifier, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>): com.arkivanov.decompose.extensions.compose.stack.animation/StackAnimator // com.arkivanov.decompose.extensions.compose.stack.animation/stackAnimator|stackAnimator(androidx.compose.animation.core.FiniteAnimationSpec<kotlin.Float>;kotlin.Function5<kotlin.Float,com.arkivanov.decompose.extensions.compose.stack.animation.Direction,kotlin.Function3<androidx.compose.ui.Modifier,androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>,androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>){}[0]
